buildscript {
    repositories {
        mavenLocal()
        maven { url "https://repo.grails.org/grails/core" }
    }
    dependencies {
        classpath "org.grails:grails-gradle-plugin:$grailsVersion"
    }
}

version "0.1"
group "cat.dipta.plugins"

apply plugin:"eclipse"
apply plugin:"idea"
apply plugin:"org.grails.grails-plugin"
apply plugin:"org.grails.grails-plugin-publish"

repositories {
    mavenLocal()
    maven { url "https://repo.grails.org/grails/core" }
}

dependencies {
    compile "org.springframework.boot:spring-boot-starter-logging"
    compile "org.springframework.boot:spring-boot-autoconfigure"
    compile "org.grails:grails-core"
    console "org.grails:grails-console"
    profile "org.grails.profiles:plugin"
    provided "org.grails:grails-plugin-services"
    provided "org.grails:grails-plugin-domain-class"

    compile "org.grails.plugins:cache:4.0.0.M1"

    testCompile "org.grails:grails-gorm-testing-support"
    testCompile "org.grails:grails-plugin-testing"

    compile 'org.xbib.groovy:groovy-crypt:1.0.0'

    compile 'org.infinispan:infinispan-core:9.2.1.Final'
}

bootRun {
    jvmArgs('-Dspring.output.ansi.enabled=always')
    addResources = true
}

// enable if you wish to package this plugin as a standalone application
//bootRepackage.enabled = false
// TODO: Provide values here
//grailsPublish {
//    user = 'user'
//    key = 'key'
//    githubSlug = 'foo/bar'
//    license {
//        name = 'Apache-2.0'
//    }
//    title = "My Plugin"
//    desc = "Full plugin description"
//    developers = [johndoe:"John Doe"]
//}

//TODO: Delete
test {
    testLogging.showStandardStreams = true
    testLogging {
        events "passed"
    }
}